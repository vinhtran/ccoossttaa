<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Invitations', 'doctrine');

/**
 * BaseInvitations
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $fbrequest_id
 * @property string $inviter_id
 * @property string $invitee_id
 * @property timestamp $requested_date
 * @property string $accepted_method
 * @property timestamp $accepted_date
 * @property Fbusers $Fbusers
 * @property Fbusers $Fbusers_2
 * 
 * @method integer     getId()              Returns the current record's "id" value
 * @method string      getFbrequestId()     Returns the current record's "fbrequest_id" value
 * @method string      getInviterId()       Returns the current record's "inviter_id" value
 * @method string      getInviteeId()       Returns the current record's "invitee_id" value
 * @method timestamp   getRequestedDate()   Returns the current record's "requested_date" value
 * @method string      getAcceptedMethod()  Returns the current record's "accepted_method" value
 * @method timestamp   getAcceptedDate()    Returns the current record's "accepted_date" value
 * @method Fbusers     getFbusers()         Returns the current record's "Fbusers" value
 * @method Fbusers     getFbusers2()        Returns the current record's "Fbusers_2" value
 * @method Invitations setId()              Sets the current record's "id" value
 * @method Invitations setFbrequestId()     Sets the current record's "fbrequest_id" value
 * @method Invitations setInviterId()       Sets the current record's "inviter_id" value
 * @method Invitations setInviteeId()       Sets the current record's "invitee_id" value
 * @method Invitations setRequestedDate()   Sets the current record's "requested_date" value
 * @method Invitations setAcceptedMethod()  Sets the current record's "accepted_method" value
 * @method Invitations setAcceptedDate()    Sets the current record's "accepted_date" value
 * @method Invitations setFbusers()         Sets the current record's "Fbusers" value
 * @method Invitations setFbusers2()        Sets the current record's "Fbusers_2" value
 * 
 * @package    nokia_facebook
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseInvitations extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('nf_invitations');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('fbrequest_id', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('inviter_id', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('invitee_id', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('requested_date', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('accepted_method', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('accepted_date', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Fbusers', array(
             'local' => 'invitee_id',
             'foreign' => 'fbuser_id'));

        $this->hasOne('Fbusers as Fbusers_2', array(
             'local' => 'inviter_id',
             'foreign' => 'fbuser_id'));
    }
}