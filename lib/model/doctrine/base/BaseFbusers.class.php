<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Fbusers', 'doctrine');

/**
 * BaseFbusers
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property bigint $user_id
 * @property string $fbuser_id
 * @property string $fbuser_email
 * @property string $fbuser_first_name
 * @property string $fbuser_last_name
 * @property string $fbuser_data
 * @property timestamp $created_date
 * @property timestamp $modified_date
 * @property Doctrine_Collection $Image_Fbuser
 * @property Doctrine_Collection $Comment_Fbuser
 * 
 * @method bigint              getUserId()            Returns the current record's "user_id" value
 * @method string              getFbuserId()          Returns the current record's "fbuser_id" value
 * @method string              getFbuserEmail()       Returns the current record's "fbuser_email" value
 * @method string              getFbuserFirstName()   Returns the current record's "fbuser_first_name" value
 * @method string              getFbuserLastName()    Returns the current record's "fbuser_last_name" value
 * @method string              getFbuserData()        Returns the current record's "fbuser_data" value
 * @method timestamp           getCreatedDate()       Returns the current record's "created_date" value
 * @method timestamp           getModifiedDate()      Returns the current record's "modified_date" value
 * @method Doctrine_Collection getImageFbuser()       Returns the current record's "Image_Fbuser" collection
 * @method Doctrine_Collection getCommentFbuser()     Returns the current record's "Comment_Fbuser" collection
 * @method Fbusers             setUserId()            Sets the current record's "user_id" value
 * @method Fbusers             setFbuserId()          Sets the current record's "fbuser_id" value
 * @method Fbusers             setFbuserEmail()       Sets the current record's "fbuser_email" value
 * @method Fbusers             setFbuserFirstName()   Sets the current record's "fbuser_first_name" value
 * @method Fbusers             setFbuserLastName()    Sets the current record's "fbuser_last_name" value
 * @method Fbusers             setFbuserData()        Sets the current record's "fbuser_data" value
 * @method Fbusers             setCreatedDate()       Sets the current record's "created_date" value
 * @method Fbusers             setModifiedDate()      Sets the current record's "modified_date" value
 * @method Fbusers             setImageFbuser()       Sets the current record's "Image_Fbuser" collection
 * @method Fbusers             setCommentFbuser()     Sets the current record's "Comment_Fbuser" collection
 * 
 * @package    nokia.lumia.v2
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseFbusers extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('co_fbusers');
        $this->hasColumn('user_id', 'bigint', 20, array(
             'type' => 'bigint',
             'autoincrement' => true,
             'length' => 20,
             ));
        $this->hasColumn('fbuser_id', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('fbuser_email', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('fbuser_first_name', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('fbuser_last_name', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('fbuser_data', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('created_date', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('modified_date', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Image as Image_Fbuser', array(
             'local' => 'user_id',
             'foreign' => 'image_fbuser_id'));

        $this->hasMany('Comment as Comment_Fbuser', array(
             'local' => 'user_id',
             'foreign' => 'comment_fbuser'));
    }
}